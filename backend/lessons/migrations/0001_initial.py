# Generated by Django 5.2.4 on 2025-08-01 07:10

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Kompetencija',
                'verbose_name_plural': 'Kompetencijos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Komponentas',
                'verbose_name_plural': 'Komponentai',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Focus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Dėmesio kryptis',
                'verbose_name_plural': 'Dėmesio kryptys',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Mokymo lygis',
                'verbose_name_plural': 'Mokymo lygiai',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Tikslas',
                'verbose_name_plural': 'Tikslai',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Gebėjimas',
                'verbose_name_plural': 'Gebėjimai',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Dalykas',
                'verbose_name_plural': 'Dalykai',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Virtue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
            ],
            options={
                'verbose_name': 'Dorybė',
                'verbose_name_plural': 'Dorybės',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Pavadinimas')),
                ('description', models.TextField(blank=True, verbose_name='Aprašymas')),
                ('assessment_criteria', models.TextField(blank=True, verbose_name='Vertinimo kriterijai')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Sukurta')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atnaujinta')),
                ('competencies', models.ManyToManyField(blank=True, to='lessons.competency', verbose_name='Kompetencijos')),
                ('components', models.ManyToManyField(blank=True, to='lessons.component', verbose_name='Komponentai')),
                ('focus', models.ManyToManyField(blank=True, to='lessons.focus', verbose_name='Dėmesio kryptys')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lessons_mentored', to=settings.AUTH_USER_MODEL, verbose_name='Mentorius')),
                ('levels', models.ManyToManyField(blank=True, to='lessons.level', verbose_name='Mokymo lygiai')),
                ('objectives', models.ManyToManyField(blank=True, to='lessons.objective', verbose_name='Tikslai')),
                ('skills', models.ManyToManyField(blank=True, to='lessons.skill', verbose_name='Gebėjimai')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lessons.subject', verbose_name='Dalykas')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lessons.topic', verbose_name='Tema')),
                ('virtues', models.ManyToManyField(blank=True, to='lessons.virtue', verbose_name='Dorybės')),
            ],
            options={
                'verbose_name': 'Pamoka',
                'verbose_name_plural': 'Pamokos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.IntegerField(help_text='Vertinimas procentais (0-100)', validators=[django.core.validators.MinValueValidator(0, 'Procentai negali būti mažiau nei 0'), django.core.validators.MaxValueValidator(100, 'Procentai negali būti daugiau nei 100')], verbose_name='Procentai')),
                ('notes', models.TextField(blank=True, verbose_name='Pastabos')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Sukurta')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atnaujinta')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades_given', to=settings.AUTH_USER_MODEL, verbose_name='Mentorius')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades_received', to=settings.AUTH_USER_MODEL, verbose_name='Mokinys')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='lessons.lesson', verbose_name='Pamoka')),
            ],
            options={
                'verbose_name': 'Pažymys',
                'verbose_name_plural': 'Pažymiai',
                'ordering': ['-created_at'],
                'unique_together': {('student', 'lesson')},
            },
        ),
    ]
